name: Publish jaeger all-in-one images

on:
  workflow_dispatch:
    # Enable manual trigger of this action.
    inputs:
      # TODO: Update the default git-repo and git-ref to use upstream when the
      # upstream updates the dependencies.
      git-repo:
        description: Git repo address.
        default: darkowlzz/jaeger
        required: true
      git-ref:
        description: Git repo reference.
        default: shopify-sarama-int-overflow-fix
        required: true
      container-image:
        description: Container image to publish.
        required: true

env:
  IMG: ${{ github.event.inputs.container-image }}

jobs:
  publish-image:
    runs-on: ubuntu-latest
    name: Publish container image
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.git-repo }}
          ref: ${{ github.event.inputs.git-ref }}
          submodules: true
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: "--debug"
      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_PASSWORD }}
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: '10'
      - name: Install tools and build UI
        run: |
          make install-tools
          make build-ui
      - name: Create simplified Dockerfile
        # Following Dockerfile is based on cmd/all-in-one/Dockerfile. Should be
        # able to use the original Dockerfile itself. Creates for simplicity.
        run: |
          cat >Dockerfile <<EOF
          FROM ubuntu:focal
          ENV SAMPLING_STRATEGIES_FILE=/etc/jaeger/sampling_strategies.json
          COPY cmd/all-in-one/sampling_strategies.json /etc/jaeger/
          COPY all-in-one /all-in-one
          ENTRYPOINT ["/all-in-one"]
          EOF
      - name: Build for arm
        run: |
          rm -f all-in-one
          GOOS=linux GOARCH=arm CGO_ENABLED=0 go build -v -tags ui -o all-in-one ./cmd/all-in-one/main.go
          docker buildx build --platform linux/arm/v7 -t ${{ env.IMG }}-arm --push .
      - name: Build for arm64
        run: |
          rm -f all-in-one
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -v -tags ui -o all-in-one ./cmd/all-in-one/main.go
          docker buildx build --platform linux/arm64 -t ${{ env.IMG }}-arm64 --push .
      - name: Create manifest list
        run: |
          docker manifest create ${{ env.IMG }} \
            ${{ env.IMG }}-arm ${{ env.IMG }}-arm64
          docker manifest push ${{ env.IMG }}
